* "Mendelessly"
  My academic literature management (reading, organizing, note-taking).

* Dependencies
  Although all the scripts are and will be written with the assumption
  that emacs/org-mode is being used, allowing them to work with other
  markup formats should be trivial to achieve with zero to a small
  number of modifications. That said, emacs/org-mode offers an
  insanely efficient system for editing, organizing, note-taking, 
  which is the only reason for these scripts to be marginally yet
  significantly useful, as far as I can tell.

  Now here are the softwares I use for literature management in a
  daily basis:
  - editor: emacs, especially org-mode
  - file manager: ranger (optional)
    - with shortcut (see below) configured for my purpose. Of course
      this can be achieved more or less equally by bash/zsh alias
      functions.

* Usage
** org-lit-sync
   A script that helps track literature reviewing
   - a project folder
     - literature pdf/djvu's
     - org-lit-sync
     - a .org file with the last heading as "Unread" (you might wanna
       check out [[https://www.youtube.com/watch?v=LFO2UbzbZhA][this video]] to get the hang)
     - here is an example of recursive folder listing
       #+BEGIN_SRC shell
       .
       ├── lit
       │   ├── book-1.pdf
       │   ├── book-2.djvu
       │   ├── paper-1.pdf
       │   └── paper-2.pdf
       ├── org
       │   ├── literature-review.org
       │   └── suborgs
       └── org-lit-sync
       #+END_SRC
   - run the script with the new added pdf as the single argument
     #+BEGIN_EXAMPLE
     ./org-lit-sync year-author-title.pdf
     #+END_EXAMPLE
     it will
     - append the new pdf at the bottom of the .org file under the
       "Unread" heading
     - create a org link to open the pdf
     - sort all the unread papers chronically
       * if you want to sort papers by author name, just bulk name the
         papers with format: "author-year-title.pdf" (using macro to bulk rename)
   - recommendations
     - I have my ranger equipped with a keybinding
       #+BEGIN_EXAMPLE
       map mpo shell mv -v %s /**/project-folder && cd /**/project-folder && ./org-lit-sync %s
       #+END_EXAMPLE
       so that the flow goes as
       1. download the pdf
       2. change the name following the pattern
       3. call the ranger keybinding
       4. and it's ready in the .org file with unread heading and
         well-sorted
     - You can of course use shell aliases or something like that
** new-bib
   A command line prompt program that helps generate latex bib items
   - a main folder that contains
     - different project folders with corresponding bib and tex files
     - the main reference bib file
     - the *new-bib* script
     - here is an example of recursive folder listing
       #+BEGIN_SRC shell
       .
       ├── project-1
       │   ├── Makefile
       │   ├── project-1.bib
       │   └── project-1.tex
       ├── project-2
       │   ├── Makefile
       │   ├── project-2.bib
       │   └── project-2.tex
       ├── new-bib
       └── references.bib
       #+END_SRC
   - run the script with the bib type as the single argument. 
     #+BEGIN_SRC shell
       ./new-bib paper
     #+END_SRC
     /NB: I only wrote two types of bib items, paper and book, due to my needs. If you take a look at the script you will soon realize it's trivial to modify/add different types of bib item yourself)/
   - features
     - automatically gets rid of empty bib descriptions. In other
       words, if you don't know a description, just leave it blank by
       hitting enter. The script is also gonna make sure that the last
       description does NOT end with a comma.
     - automatically finds all bib files in all the subdirectories
       (recursively) and replace them with the updated main bib file
       *references.bib*.
     - outputs the newly added bib item at the end of the prompts for
       a quick check.
     - an example:
       #+BEGIN_EXAMPLE
	 username@host project-folder % ./new-bib book

	 ------
	 |Tag?|
	 ------

	 Rudin:1976

	 ---------
	 |Author?|
	 ---------

	 Rudin, Walter

	 --------
	 |Title?|
	 --------

	 Principles of Mathematical Analysis

	 ---------
	 |Series?|
	 ---------



	 ---------
	 |Volume?|
	 ---------

	 1976

	 ----------
	 |Edition?|
	 ----------

	 3

	 ------------
	 |Publisher?|
	 ------------

	 McGraw-Hill

	 ---------------------
	 |New bib item added:|
	 ---------------------

	 @BOOK{Rudin:1976,
	   author =       {Rudin, Walter},
	   title =        {Principles of Mathematical Analysis},
	   year =         {1976},
	   edition =      {3},
	   publisher =    {McGraw-Hill}
	 }

       #+END_EXAMPLE

* Upcoming features
  - [ ] Genealogy in your research circle
  - [ ] Latex templates (specifying packages) generation
